import os
from huggingface_hub import snapshot_download

REPO_ID = "thanhtantran/Stable-Diffusion-1.5-LCM-ONNX-RKNN2"
MODEL_FOLDER = "model"
LOCAL_MODEL_DIR = "./model"  # T·∫£i th·∫≥ng v√†o ./model

def download_model(force_redownload=False):
    """
    T·∫£i folder 'model' t·ª´ Hugging Face Hub n·∫øu ch∆∞a t·ªìn t·∫°i c·ª•c b·ªô.
    
    Args:
        force_redownload (bool): N·∫øu True, t·∫£i l·∫°i d√π folder ƒë√£ t·ªìn t·∫°i.
    
    Returns:
        str: ƒê∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi ƒë·∫øn folder model.
    """
    # Ki·ªÉm tra v√† t·∫°o th∆∞ m·ª•c n·∫øu c·∫ßn
    os.makedirs(LOCAL_MODEL_DIR, exist_ok=True)
    
    if not force_redownload and os.path.exists(os.path.join(LOCAL_MODEL_DIR, ".gitattributes")):
        print("‚úÖ Folder model ƒë√£ t·ªìn t·∫°i. B·ªè qua t·∫£i xu·ªëng.")
        return os.path.abspath(LOCAL_MODEL_DIR)

    print("üîÑ ƒêang t·∫£i folder 'model' t·ª´ Hugging Face Hub...")
    try:
        # T·∫£i ch·ªâ n·ªôi dung trong folder 'model' c·ªßa repo
        snapshot_download(
            repo_id=REPO_ID,
            allow_patterns=f"{MODEL_FOLDER}/*",
            local_dir=LOCAL_MODEL_DIR,
            local_dir_use_symlinks=False,
            resume_download=True,
        )
        print(f"‚úÖ ƒê√£ t·∫£i xong v√†o: {os.path.abspath(LOCAL_MODEL_DIR)}")
        return os.path.abspath(LOCAL_MODEL_DIR)
    
    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫£i model: {e}")
        raise

def get_model_path():
    """Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi ƒë·∫øn folder model (kh√¥ng ki·ªÉm tra t·ªìn t·∫°i)."""
    return os.path.abspath(LOCAL_MODEL_DIR)